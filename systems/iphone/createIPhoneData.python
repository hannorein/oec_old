#!/usr/bin/python
from xml.etree import ElementTree
import os, glob, string, csv, datetime, random,md5
import gzip

# Human readable XML output
def indent(elem, level=0):
    i = "\n" + level*"\t"
    if len(elem):
        if not elem.text or not elem.text.strip():
            elem.text = i + "\t"
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
        for elem in elem:
            indent(elem, level+1)
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
    else:
        if level and (not elem.tail or not elem.tail.strip()):
            elem.tail = i

# Hide empty elements
def traverse(node):  #remove empty elements
	children = node.getchildren()
	deleted = 0
	for c in children:
		text = c.text
		if text == None:
			#print "#############"
			#print c #.text
			node.remove(c)
			deleted = 1
			break
		traverse(c)
	if deleted==1:
		traverse(node)

#########################################
####NEW SYSTEM DATABASE FORMAT###########
#########################################

def databasesystems(name,description,inputdirectories):
	numpl = 0
	systems = 0
	root = ElementTree.Element("systems")
	## import data
	for inputdirectory in inputdirectories:
		for filename in glob.glob(inputdirectory+"/*.xml"):
			planet = open(filename, 'rt')
			planettree = ElementTree.parse(planet).getroot()
			traverse(planettree)
			root.append(planettree)
			numpl += len(planettree.findall(".//planet"))
			systems +=1
		
	# wrap it in an ElementTree instance, and save as XML
	root.attrib["name"]=name
	root.attrib["planets"]="%d"%numpl
	indent(root)
	ElementTree.ElementTree(root).write(name+".xml")
	f = open(name+".xml", 'rt') 
	content = f.read()
	f.close()
	f = gzip.open(name+'.xml.gz', 'wb')
	f.write(content)
	f.close()
	root = ElementTree.Element("database")
	ElementTree.SubElement(root,"name").text		= name
	ElementTree.SubElement(root,"description").text		= description
	ElementTree.SubElement(root,"num").text			= str(numpl)
	ElementTree.SubElement(root,"systems").text		= str(systems)
	ElementTree.SubElement(root,"date").text		= str(datetime.date.today())
	ElementTree.SubElement(root,"size").text		= str(os.path.getsize(name+".xml"))
	ElementTree.SubElement(root,"sizecompressed").text	= str(os.path.getsize(name+".xml.gz"))
	ElementTree.SubElement(root,"hash").text 		= md5.md5(content).hexdigest()
	return root

databases = []
databases.append(databasesystems("systems",	"Confirmed, controversial and retracted exoplanets", 	[".."]))
#databases.append(databasesystems("datakepler",	"Kepler Objects of Interest (unconfirmed)",		["data_kepler"]))

root = ElementTree.Element("databases")
for db in databases:
	root.append(db)
indent(root)
ElementTree.ElementTree(root).write("databases.xml")

